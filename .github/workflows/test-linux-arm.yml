name: Test Linux

on:
  workflow_dispatch:
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Check .nuget cache
        id:   nugetcache
        uses: actions/cache/restore@v4
        with:
          path: ~/.nuget/
          key:  linux-nuget-cache

      - name: Restore csproj
        if:   steps.nugetcache.outputs.cache-hit != 'true'
        run:  dotnet restore AnimatedImageTest/AnimatedImageTest.csproj

      - name: Save .nuget cache
        if:   steps.nugetcache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: ~/.nuget/
          key:  linux-nuget-cache

      - name: Build csproj
        run:  dotnet build AnimatedImageTest/AnimatedImageTest.csproj

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker build
        run: |
          docker buildx build --platform linux/arm64 -f DockerFile -o type=docker -t linux-arm-image .
          docker run -t -d --name linux-arm-container linux-arm-image

      - name: Copy nuget and project
        run: |
          hosthome=`realpath ~`
          guesthome=`docker exec linux-arm-container bash -c "realpath ~"`
          docker cp $hosthome/.nuget linux-arm-container:$guesthome/
          docker cp . linux-arm-container:/src/

      - name: Test in Docker
        run: docker exec -it linux-arm-container dotnet test AnimatedImageTest/AnimatedImageTest.csproj -f net9.0

      - name: Test on host linux
        run: dotnet test AnimatedImageTest/AnimatedImageTest.csproj -f net9.0
