name: Build libwebp

on:
  workflow_dispatch:

jobs:
  download-source:
    runs-on: ubuntu-latest
    outputs:
      artifact-name: libwebp-source
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download and extract libwebp
        run: |
          cd ~
          curl -LO https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-1.6.0.tar.gz

      - name: Cache extracted source
        uses: actions/cache/save@v4
        with:
          path: ~/libwebp-1.6.0.tar.gz
          key: libwebp-source
          enableCrossOsArchive: true

  build-windows:
    needs: download-source
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [ARM]
    steps:
      - name: Cache extracted source
        uses: actions/cache/restore@v4
        with:
          path: ~/libwebp-1.6.0.tar.gz
          key: libwebp-source
          enableCrossOsArchive: true
          fail-on-cache-miss: true

      - name: Extracts tar.gz
        run: |
          cd ~
          tar -xzf libwebp-1.6.0.tar.gz
          Rename-Item libwebp-1.6.0 libwebp

      - name: Build libwebp
        run: |
          cd ~
          mkdir build && cd build
          cmake ../libwebp `
            -DCMAKE_GENERATOR_PLATFORM=${{ matrix.arch }} `
            -DCMAKE_BUILD_TYPE=Release `
            -DBUILD_SHARED_LIBS=ON `
            -DCMAKE_INSTALL_PREFIX=install-${{ matrix.arch }}
          cmake --build . --config Release
          cd ~
          mkdir lib-win-${{ matrix.arch }}
          cp .\build\Release\libwebp.dll        lib-win-${{ matrix.arch }}\
          cp .\build\Release\libwebpdecoder.dll lib-win-${{ matrix.arch }}\          

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: libwebp-windows-${{ matrix.arch }}
          path: lib-win-${{ matrix.arch }}
